name: CI - Go

on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: false
        description: "Codecov token for uploading coverage reports"

  ### Required Workflow Triggers ###
  pull_request:
  merge_group:
  ##################################

permissions:
  contents: read
  packages: read

jobs:
  lint:
    name: 🧹 Lint
    runs-on: ubuntu-latest
    # Ignore Require Workflow runs
    if: github.repository != 'devantler-tech/reusable-workflows'
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: 📄 Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: 🧹 Lint
        uses: oxsecurity/megalinter/flavors/go@e08c2b05e3dbc40af4c23f41172ef1e068a7d651 # v8.8.0
        id: ml
        env:
          VALIDATE_ALL_CODEBASE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive production artifacts
        if: success() || failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log

      - name: Set APPLY_FIXES_IF var
        run: |
          printf 'APPLY_FIXES_IF=%s\n' "${{
            steps.ml.outputs.has_updated_sources == 1 &&
            (
              env.APPLY_FIXES_EVENT == 'all' ||
              env.APPLY_FIXES_EVENT == github.event_name
            ) &&
            (
              github.event_name == 'push' ||
              github.event.pull_request.head.repo.full_name == github.repository
            )
          }}" >> "${GITHUB_ENV}"

      - name: Set APPLY_FIXES_IF_* vars
        run: |
          printf 'APPLY_FIXES_IF_PR=%s\n' "${{
            env.APPLY_FIXES_IF == 'true' &&
            env.APPLY_FIXES_MODE == 'pull_request'
          }}" >> "${GITHUB_ENV}"
          printf 'APPLY_FIXES_IF_COMMIT=%s\n' "${{
            env.APPLY_FIXES_IF == 'true' &&
            env.APPLY_FIXES_MODE == 'commit' &&
            (!contains(fromJSON('["refs/heads/main", "refs/heads/master"]'), github.ref))
          }}" >> "${GITHUB_ENV}"

      - name: Create Pull Request with applied fixes
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        id: cpr
        if: env.APPLY_FIXES_IF_PR == 'true'
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          commit-message: "[MegaLinter] Apply linters automatic fixes"
          title: "[MegaLinter] Apply linters automatic fixes"
          labels: bot

      - name: Create PR output
        if: env.APPLY_FIXES_IF_PR == 'true'
        run: |
          echo "PR Number - $PR_NUMBER"
          echo "PR URL - $PR_URL"
        env:
          PR_NUMBER: ${{ steps.cpr.outputs.pull-request-number }}
          PR_URL: ${{ steps.cpr.outputs.pull-request-url }}

      - name: Prepare commit
        if: env.APPLY_FIXES_IF_COMMIT == 'true'
        run: sudo chown -Rc $UID .git/

      - name: Commit and push applied linter fixes
        uses: stefanzweifel/git-auto-commit-action@778341af668090896ca464160c2def5d1d1a3eb0 # v6.0.1
        if: env.APPLY_FIXES_IF_COMMIT == 'true'
        with:
          branch: >-
            ${{
              github.event.pull_request.head.ref ||
              github.head_ref ||
              github.ref
            }}
          commit_message: "[MegaLinter] Apply linters fixes"
          commit_user_name: megalinter-bot
          commit_user_email: 129584137+megalinter-bot@users.noreply.github.com

  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    # Ignore Require Workflow runs
    if: github.repository != 'devantler-tech/reusable-workflows'
    permissions:
      contents: write
    steps:
      - name: 📑 Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: ⚙️ Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0

      - name: ⚙️ Setup Mockery
        run: |
          go install github.com/vektra/mockery/v3@v3.5.3
          export PATH=$PATH:$(go env GOPATH)/bin

      - name: ⬇️ Install dependencies
        run: |
          go get .

      - name: 🛠️ Build
        run: go build -v ./...

      - name: 📄 Generate mocks
        id: mock
        run: mockery

      - name: "🔍 Check for changes"
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          since_last_remote_commit: true

      - name: "📤 Commit generated mocks"
        uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5 # v9.1.4
        with:
          add: .
          message: "chore: update mocks"
          default_author: github_actions

      - name: 🧪 Test
        run: go test ./...

      - name: 👨🏻‍🔧 Enable covdata (temp) see https://github.com/golang/go/issues/75031
        run: go env -w GOTOOLCHAIN=go1.25.0+auto

      - name: 📄 Generate coverage
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: 📄 Upload coverage to Codecov
        uses: codecov/codecov-action@fdcc8476540edceab3de004e990f80d881c6cc00 # v5.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
